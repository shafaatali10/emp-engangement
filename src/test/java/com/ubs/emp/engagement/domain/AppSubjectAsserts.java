package com.ubs.emp.engagement.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AppSubjectAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppSubjectAllPropertiesEquals(AppSubject expected, AppSubject actual) {
        assertAppSubjectAutoGeneratedPropertiesEquals(expected, actual);
        assertAppSubjectAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppSubjectAllUpdatablePropertiesEquals(AppSubject expected, AppSubject actual) {
        assertAppSubjectUpdatableFieldsEquals(expected, actual);
        assertAppSubjectUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppSubjectAutoGeneratedPropertiesEquals(AppSubject expected, AppSubject actual) {
        assertThat(expected)
            .as("Verify AppSubject auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppSubjectUpdatableFieldsEquals(AppSubject expected, AppSubject actual) {
        assertThat(expected)
            .as("Verify AppSubject relevant properties")
            .satisfies(e -> assertThat(e.getSubjectCode()).as("check subjectCode").isEqualTo(actual.getSubjectCode()))
            .satisfies(e -> assertThat(e.getTopicCode()).as("check topicCode").isEqualTo(actual.getTopicCode()))
            .satisfies(e -> assertThat(e.getStatus()).as("check status").isEqualTo(actual.getStatus()))
            .satisfies(e -> assertThat(e.getIsApprovalRequired()).as("check isApprovalRequired").isEqualTo(actual.getIsApprovalRequired()))
            .satisfies(e -> assertThat(e.getIsApproved()).as("check isApproved").isEqualTo(actual.getIsApproved()))
            .satisfies(e -> assertThat(e.getDetailsJson()).as("check detailsJson").isEqualTo(actual.getDetailsJson()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppSubjectUpdatableRelationshipsEquals(AppSubject expected, AppSubject actual) {}
}
