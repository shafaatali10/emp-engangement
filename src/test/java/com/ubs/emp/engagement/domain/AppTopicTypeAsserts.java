package com.ubs.emp.engagement.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AppTopicTypeAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppTopicTypeAllPropertiesEquals(AppTopicType expected, AppTopicType actual) {
        assertAppTopicTypeAutoGeneratedPropertiesEquals(expected, actual);
        assertAppTopicTypeAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppTopicTypeAllUpdatablePropertiesEquals(AppTopicType expected, AppTopicType actual) {
        assertAppTopicTypeUpdatableFieldsEquals(expected, actual);
        assertAppTopicTypeUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppTopicTypeAutoGeneratedPropertiesEquals(AppTopicType expected, AppTopicType actual) {
        assertThat(expected)
            .as("Verify AppTopicType auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppTopicTypeUpdatableFieldsEquals(AppTopicType expected, AppTopicType actual) {
        assertThat(expected)
            .as("Verify AppTopicType relevant properties")
            .satisfies(e -> assertThat(e.getTopicCode()).as("check topicCode").isEqualTo(actual.getTopicCode()))
            .satisfies(e -> assertThat(e.getTopicName()).as("check topicName").isEqualTo(actual.getTopicName()))
            .satisfies(e -> assertThat(e.getTargetGroup()).as("check targetGroup").isEqualTo(actual.getTargetGroup()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppTopicTypeUpdatableRelationshipsEquals(AppTopicType expected, AppTopicType actual) {}
}
