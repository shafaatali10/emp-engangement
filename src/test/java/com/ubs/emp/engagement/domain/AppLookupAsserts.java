package com.ubs.emp.engagement.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class AppLookupAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppLookupAllPropertiesEquals(AppLookup expected, AppLookup actual) {
        assertAppLookupAutoGeneratedPropertiesEquals(expected, actual);
        assertAppLookupAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppLookupAllUpdatablePropertiesEquals(AppLookup expected, AppLookup actual) {
        assertAppLookupUpdatableFieldsEquals(expected, actual);
        assertAppLookupUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppLookupAutoGeneratedPropertiesEquals(AppLookup expected, AppLookup actual) {
        assertThat(expected)
            .as("Verify AppLookup auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppLookupUpdatableFieldsEquals(AppLookup expected, AppLookup actual) {
        assertThat(expected)
            .as("Verify AppLookup relevant properties")
            .satisfies(e -> assertThat(e.getLookupCode()).as("check lookupCode").isEqualTo(actual.getLookupCode()))
            .satisfies(e -> assertThat(e.getDisplayValue()).as("check displayValue").isEqualTo(actual.getDisplayValue()))
            .satisfies(e -> assertThat(e.getSequence()).as("check sequence").isEqualTo(actual.getSequence()))
            .satisfies(e -> assertThat(e.getCategory()).as("check category").isEqualTo(actual.getCategory()))
            .satisfies(e -> assertThat(e.getDependentCode()).as("check dependentCode").isEqualTo(actual.getDependentCode()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertAppLookupUpdatableRelationshipsEquals(AppLookup expected, AppLookup actual) {}
}
